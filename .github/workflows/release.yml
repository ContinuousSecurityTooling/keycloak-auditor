name: Create release # You may choose a different name
run-name: ${{ inputs.releaseversion }} # Enumerates entries in the "workflow runs" view
on:
    workflow_dispatch:
        inputs:
            releaseversion:
                description: 'Release version'
                required: true
                type: string
                default: "X.Y.Z"

jobs:
    release: # Arbitrarily chosen
        name: Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            attestations: write
            id-token: write
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   uses: actions/create-github-app-token@v1
                id: app-token
                with:
                    app-id: ${{ vars.CI_APP_ID }}
                    private-key: ${{ secrets.CI_PRIVATE_KEY }}

            -   name: Setup NodeJS
                uses: actions/setup-node@v4
                with:
                    node-version: '20'
                    registry-url: 'https://registry.npmjs.org'

            -   name: Setup Java
                uses: actions/setup-java@v4 # Does also set up Maven and GPG
                with:
                    distribution: 'temurin' # As good as any other, see: https://github.com/actions/setup-java#supported-distributions
                    java-package: 'jdk'
                    java-version: '21'
                    check-latest: true
                    cache: 'maven'

            -   name: Setup settings.xml
                uses: s4u/maven-settings-action@v3.0.0
                with:
                    override: true
                    servers: |
                        [{
                            "id": "central",
                            "username": "${{ secrets.OSS_SONATYPE_USER }}",
                            "password": "${{ secrets.OSS_SONATYPE_USER }}"
                        },{
                            "id":"github",
                            "username": "ci-bot",
                            "password": "${{ secrets.GITHUB_TOKEN }}"
                        }]

            -   name: Configure git
                run: |
                    git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
                    git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

            -   name: Create release
                env:
                    GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
                run: |
                    export TZ="Europe/Berlin"
                    mvn release:prepare release:perform -B -DreleaseVersion=${{ inputs.releaseversion }} -Dusername=ci-bot -Dpassword=$GITHUB_TOKEN -DskipITs=true -Darguments="-DskipTests=true -DskipITs=true"
                    # write version info
                    cat <<EOF >target/config.json
                    {
                      "version": "${{ inputs.releaseversion }}"
                    }
                    EOF

            -   name: Conventional Changelog Action
                uses: TriPSs/conventional-changelog-action@v5
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    version-file: target/config.json
                    pre-release: true
                    skip-bump: true
                    skip-tag: true
                    skip-on-empty: false
                    tag-prefix: 'v'

            -   name: Create Release
                uses: mikepenz/action-gh-release@v1
                with:
                    repo_token: ${{ secrets.GITHUB_TOKEN }}
                    asset_name: keycloak-auditor-spi.jar
                    file: spi/target/keycloak-auditor-spi.jar
                    tag: v${{ inputs.releaseversion }}
                    overwrite: true

            -   run: cd sdk && npm run clean && npm run build
            -   name: Publish npm package
                run: cd sdk && npm publish
                env:
                    NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
